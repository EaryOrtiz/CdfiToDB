// <auto-generated />
using CDFIToDB.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CDFIToDB.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190520013153_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CDFIToDB.Models.CDFI", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AntiguedadNomina");

                    b.Property<string>("CURPNomina");

                    b.Property<string>("CantidadConceptos");

                    b.Property<string>("CertificadoComprobante");

                    b.Property<string>("ClavePercepciones");

                    b.Property<string>("ConceptoPercepciones");

                    b.Property<string>("DepartamentoNomina");

                    b.Property<string>("DescripcionConceptos");

                    b.Property<string>("DescuentoComprobante");

                    b.Property<string>("FechaComprobante");

                    b.Property<string>("FechaFinalPagoNomina");

                    b.Property<string>("FechaInicialPagoNomina");

                    b.Property<string>("FechaInicioRealLaboralNomina");

                    b.Property<string>("FechaPagoNomina");

                    b.Property<string>("FolioComprobante");

                    b.Property<string>("FormaDePagoComprobante");

                    b.Property<string>("ImporteConceptos");

                    b.Property<string>("ImporteExentoPercepciones");

                    b.Property<string>("ImporteGravadoPercepciones");

                    b.Property<string>("ImporteRetecionesImpuestos");

                    b.Property<string>("ImpuestoRetencionesImpuestos");

                    b.Property<string>("LugarExpedicionComprobante");

                    b.Property<string>("MetodoDePagoComprobante");

                    b.Property<string>("MotivoDescuentoComprobante");

                    b.Property<string>("NoCertificadoComprobante");

                    b.Property<string>("NombreEmisor");

                    b.Property<string>("NombreReceptor");

                    b.Property<string>("NumDiasPagadosNomina");

                    b.Property<string>("NumEmpleadoNomina");

                    b.Property<string>("NumSeguroSocialNomina");

                    b.Property<string>("PeriodicidadPagoNomina");

                    b.Property<string>("PuestoNomina");

                    b.Property<string>("RFCEmisor");

                    b.Property<string>("RFCReceptor");

                    b.Property<string>("RegimenEmisor");

                    b.Property<string>("RegistroPatronalNomina");

                    b.Property<string>("RiesgoPuestoNomina");

                    b.Property<string>("SalarioBaseCotAporNomina");

                    b.Property<string>("SalarioDiarioIntegradoNomina");

                    b.Property<string>("SelloComprobante");

                    b.Property<string>("SerieComprobante");

                    b.Property<string>("SubtotalComprobante");

                    b.Property<string>("TipoContratoNomina");

                    b.Property<string>("TipoDeComprobante");

                    b.Property<string>("TipoJornadaNomina");

                    b.Property<string>("TipoPercepcion");

                    b.Property<string>("TipoRegimenNomina");

                    b.Property<string>("TotalComprobante");

                    b.Property<string>("TotalExentoPercepciones");

                    b.Property<string>("TotalGravadoPercepciones");

                    b.Property<string>("TotalImpuestosReteneidos");

                    b.Property<string>("TotalImpuestosTrasladados");

                    b.Property<string>("UUID");

                    b.Property<string>("UnidadConceptos");

                    b.Property<string>("ValorUnitarioConceptos");

                    b.Property<string>("VersionComprobante");

                    b.Property<string>("VersionNomina");

                    b.HasKey("ID");

                    b.ToTable("CDFIs");
                });
#pragma warning restore 612, 618
        }
    }
}
